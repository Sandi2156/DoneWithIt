1. platform specific code: Platform.select, file.platform.js
2. style={[]}
3. FlatList, SectionList api
4. expo-constants
5. gesture handler : https://docs.expo.dev/versions/latest/sdk/gesture-handler/
6. import {MaterialCommunityIcons} from "@expo/vector-icons"
7. import {Modal, TouchableOpacity...} from 'react-native'
8. Formik and Yup library

PART - 2
1. library: expo-image-picker, expo-permissions(deprecated), expo-location, ApiSause (for api calls), react-native-debugger (for network and redux debugging)
    lottie-react-native (for animation), react-native-progress (progress-bar)
2. components: 
  i> ScrollView
  <ScrollView
    horizontal
    ref={scrollRef}
    onContentSizeChange={() =>
      scrollRef.current.scrollToEnd({ animated: true })
    }
  ></ScrollView>

  ii> TouchableOpacity, TouchableWithoutFeedback, TouchableHighlight
  iii> FlatList

3. custom hooks: useLocation
4. Navigators
  i> Stack Navigator
  ii> Tab Navigator
  iii> Drawer Navigator
5. you can override navigation theme

6. Offline Support
  a. Stratagies for creating offline capable apps   
    i. Notify the user
    ii. Disable certain features
    iii. Cache data
    iv. Store user actions
  b. @react-native-community/netinfo -> this package is used to check the network connection
  c. Caching options in a native-app
    i. AsyncStorage : @react-native-async-storage/async-storage
    ii. SecureStore
    iii. SQLlite
  d. Caching Layer
    i. Serialize/ DeSerialize (Stringify / Parse)
    ii. Apply timestamp
    iii. Remove expired items
  e. react-native-expo-image-cache : for caching images, this package relies on expo-blur

7. Authentication
  a. Providers
    i. Amplify by Amazon
    ii. Firebase by Google
    iii. Auth0
  b. jwt-decode : [library to decode json web token]
  c. expo-secure-store : [library to store something securely in file system. we'll use it to store auth token. so that
    if user restart the app he doesn't have to login again]
  d. expo-app-loading : to hadle splash

  
  